{"version":3,"sources":["../../shared/dist/gql/fragments/account.js","../../shared/dist/gql/fragments/transaction.js","../../shared/dist/index.js","../../shared/dist/gql/client/useClient.js","../../shared/dist/hooks/useCurrentOrganizationId.js","../../shared/dist/hooks/useSessionStorage.js","../../shared/dist/gql/client/useSchema.js","../../shared/dist/gql/fragments/balanceSheetReport.js","../../shared/dist/gql/fragments/incomeStatementReport.js","../../shared/dist/gql/fragments/bankAccount.js","../../shared/dist/gql/fragments/bankAccountTransaction.js","../../shared/dist/gql/fragments/organization.js","../../shared/dist/gql/fragments/user.js","../../gql/schema.graphql","../../gql/dist/index.js","../../shared/dist/gql/index.js","../../shared/dist/gql/client/index.js","../../shared/dist/gql/client/useApolloProvider.js","../../shared/dist/gql/fragments/index.js","../../shared/dist/gql/mutations/index.js","../../shared/dist/gql/mutations/createAccount.js","../../shared/dist/gql/mutations/createPlaidLinkToken.js","../../shared/dist/gql/mutations/createTransaction.js","../../shared/dist/gql/mutations/deleteAccount.js","../../shared/dist/gql/fragments/deleteAccountResponse.js","../../shared/dist/gql/mutations/deleteTransaction.js","../../shared/dist/gql/fragments/deleteTransactionResponse.js","../../shared/dist/gql/mutations/login.js","../../shared/dist/gql/mutations/logout.js","../../shared/dist/gql/mutations/reconcileBankAccountTransaction.js","../../shared/dist/gql/mutations/submitPlaidPublicToken.js","../../shared/dist/gql/mutations/updateAccount.js","../../shared/dist/gql/mutations/updateTransaction.js","../../shared/dist/gql/queries/index.js","../../shared/dist/gql/queries/account.js","../../shared/dist/gql/queries/accounts.js","../../shared/dist/gql/queries/balanceSheetReport.js","../../shared/dist/gql/queries/bankAccounts.js","../../shared/dist/gql/queries/bankAccountTransactions.js","../../shared/dist/gql/queries/incomeStatementReport.js","../../shared/dist/gql/queries/me.js","../../shared/dist/gql/queries/organizations.js","../../shared/dist/gql/queries/transaction.js","../../shared/dist/gql/queries/transactions.js","../../shared/dist/gql/queries/transactionsForAccount.js","../../shared/dist/gql/fragments/runningTransaction.js","../../shared/dist/hooks/index.js","../../shared/dist/hooks/useFirebaseApp.js","../../shared/dist/hooks/useFlagState.js","../../gql/dist/schema.js","components/gql/AppApolloProvider.tsx","components/layout/useStyles.ts","components/bankAccounts/BankAccountMask.tsx","components/common/AddButton.tsx","components/plaid/PlaidLoader.tsx","components/plaid/PlaidAccountSelector.tsx","components/bankAccounts/bankAccountsGrid/AddBankAccountButton.tsx","components/bankAccounts/bankAccountsGrid/BankAccountsGrid.tsx","components/routes/BankAccountsRoute.tsx","components/layout/appDrawer/BankAccountsButton.tsx","components/accountTypes/AccountTypeSelect.tsx","components/common/SubmitButton.tsx","components/accounts/accountsGrid/AddAccountDialog.tsx","components/accounts/accountsGrid/AddAccountButton.tsx","components/common/EditButton.tsx","components/accounts/accountsGrid/EditAccountDialog.tsx","components/accounts/accountsGrid/EditAccountButton.tsx","components/common/DeleteButton.tsx","components/accounts/accountsGrid/DeleteAccountButton.tsx","components/accounts/accountsGrid/AccountsGrid.tsx","components/routes/AccountsRoute.tsx","components/layout/appDrawer/AccountsButton.tsx","components/accounts/AccountSelect.tsx","components/transactions/TransactionsForAccountGrid.tsx","components/transactions/transactionsGrid/CommonTransactionEditor.tsx","components/transactions/transactionsGrid/AddTransactionDialog.tsx","components/transactions/transactionsGrid/AddTransactionButton.tsx","components/transactions/transactionsGrid/EditTransactionDialog.tsx","components/transactions/transactionsGrid/EditTransactionButton.tsx","components/transactions/transactionsGrid/DeleteTransactionButton.tsx","components/transactions/transactionsGrid/TransactionsGrid.tsx","components/routes/TransactionsRoute.tsx","components/layout/appDrawer/TransactionsButton.tsx","components/organizations/OrganizationSelect.tsx","components/auth/CurrentOrganizationSelectForm.tsx","components/routes/CurrentOrganizationSelectRoute.tsx","components/layout/appDrawer/OrganizationsButton.tsx","components/layout/appDrawer/LogOutButton.tsx","components/reports/balanceSheet/BalanceSheetReport.tsx","components/routes/BalanceSheetReportRoute.tsx","components/reports/incomeStatement/IncomeStatementReport.tsx","components/routes/IncomeStatementReportRoute.tsx","components/routes/ReportsRoute.tsx","components/layout/appDrawer/ReportsButton.tsx","components/layout/appDrawer/AppDrawerButtonList.tsx","components/layout/appDrawer/AppDrawer.tsx","components/layout/AppToolbar.tsx","components/bankAccountTransactions/bankAccountTransactionsGrid/ReconcileBankAccountTransactionDialog.tsx","components/bankAccountTransactions/bankAccountTransactionsGrid/ReconcileBankAccountTransactionButton.tsx","components/bankAccountTransactions/bankAccountTransactionsGrid/BankAccountTransactionsGrid.tsx","components/routes/BankAccountTransactionsRoute.tsx","components/layout/AppContent.tsx","components/layout/AppLayout.tsx","components/auth/LoginForm.tsx","components/auth/useFirebaseApp.ts","components/routes/LoginRoute.tsx","components/app/AppRouter.tsx","components/app/App.tsx","index.tsx"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","gqlAccount","graphql_tag_1","require","default","gqlTransaction","account_1","__createBinding","create","o","m","k","k2","undefined","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","useClient","react_1","client_1","context_1","apollo_link_scalars_1","big_js_1","useCurrentOrganizationId_1","useSchema_1","typesMap","Money","serialize","toString","parseValue","uri","gqlSchema","schema","useSchema","useCurrentOrganizationId","currentOrganizationId","useMemo","authLink","setContext","_","headers","link","ApolloLink","from","withScalars","createHttpLink","credentials","ApolloClient","cache","InMemoryCache","connectToDevTools","useSessionStorage_1","useSessionStorage","key","useState","window","sessionStorage","getItem","state","setState","memoizedState","setValue","useCallback","removeItem","setItem","dispatchEvent","Event","useEffect","eventListener","addEventListener","removeEventListener","core_1","graphql_1","schema_1","typeDefs","gql","resolvers","Date","GraphQLScalarType","name","parsed","toISOString","raw","parseLiteral","ast","kind","Kind","STRING","INT","makeExecutableSchema","gqlBalanceSheetReport","gqlIncomeStatementReport","gqlBankAccount","gqlBankAccountTransaction","gqlOrganization","gqlUser","module","__setModuleDefault","v","__importStar","result","useApolloProvider","jsx_runtime_1","useClient_1","client","loadingComponent","children","LoadingComponent","jsx","ApolloProvider","assign","useCreateAccountMutation","gqlCreateAccountMutation","useMutation","useCreatePlaidLinkTokenMutation","gqlCreatePlaidLinkTokenMutation","useCreateTransactionMutation","gqlCreateTransactionMutation","transaction_1","useDeleteAccountMutation","gqlDeleteAccountMutation","deleteAccountResponse_1","gqlDeleteAccountResponse","useDeleteTransactionMutation","gqlDeleteTransactionMutation","deleteTransactionResponse_1","gqlDeleteTransactionResponse","useLoginMutation","gqlLoginMutation","useLogoutMutation","gqlLogoutMutation","useReconcileBankAccountTransactionMutation","gqlReconcileBankAccountTransactionMutation","useSubmitPlaidPublicTokenMutation","gqlSubmitPlaidPublicTokenMutation","useUpdateAccountMutation","gqlUpdateAccountMutation","useUpdateTransactionMutation","gqlUpdateTransactionMutation","useAccountQuery","gqlAccountQuery","accountId","useQuery","variables","useAccountsQuery","gqlAccountsQuery","useBalanceSheetReportQuery","gqlBalanceSheetReportQuery","balanceSheetReport_1","date","useBankAccountsQuery","gqlBankAccountsQuery","bankAccount_1","useBankAccountTransactionsQuery","gqlBankAccountTransactionsQuery","bankAccountTransaction_1","bankAccountId","offset","limit","onlyUnreconciled","useIncomeStatementReportQuery","gqlIncomeStatementReportQuery","incomeStatementReport_1","startDate","endDate","useMeQuery","gqlMeQuery","user_1","useOrganizationsQuery","gqlOrganizationsQuery","organization_1","useTransactionQuery","gqlTransactionQuery","transactionId","useTransactionsQuery","gqlTransactionsQuery","useTransactionsForAccountQuery","gqlTransactionsForAccountQuery","runningTransaction_1","RunningTransaction","useFirebaseApp","app_1","appCache","options","keys","length","some","firebaseApp","initializeApp","app","useFlagState","initialValue","setTrue","setFalse","AccountTypeEnum","AppApolloProvider","process","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","overflowX","position","whiteSpace","drawerPaperClose","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","BankAccountMask","props","bankAccount","mask","AddButton","color","onClick","disabled","Button","variant","startIcon","PlaidLoader","createPlaidLinkToken","plaidLinkToken","setPlaidLinkToken","a","data","PlaidAccountSelector","onSubmit","plaidConfig","token","onSuccess","usePlaidLink","open","ready","error","console","AddBankAccountButton","useSubmitPlaidPublicToken","publicToken","BankAccountsGrid","allowAdd","bankAccounts","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","id","plaidType","BANK_ACCOUNTS_ROUTE","BankAccountsRoute","BankAccountsButton","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","createStyles","formControl","margin","minWidth","selectEmpty","marginTop","AccountTypeSelect","label","onChange","classes","doChange","e","target","FormControl","className","InputLabel","shrink","Select","labelId","displayEmpty","MenuItem","accountType","SubmitButton","AddAccountDialog","onClose","createAccount","setName","setAccountType","doSubmit","accountInput","refetchQueries","query","Dialog","DialogTitle","DialogContent","TextField","AddAccountButton","isAddccountDialogVisible","showAddAccountDialog","hideAddAccountDialog","EditButton","EditAccountDialog","isLoaded","setIsLoaded","updateAccount","account","EditAccountButton","isEditAccountDialogVisible","showEditAccountDialog","hideEditAccountDialog","DeleteButton","DeleteAccountButton","deleteAccountMutation","deleteAccount","AccountsGrid","allowEdit","allowDelete","accounts","showActionsColumn","ACCOUNTS_ROUTE","AccountsRoute","AccountsButton","AccountSelect","TransactionsForAccountGrid","transactions","transactionsForAccount","align","transaction","toDateString","description","creditAmount","debitAmount","runningBalance","CommonTransactionEditor","initialValues","setDate","creditAccountId","setCreditAccountId","debitAccountId","setDebitAccountId","setDescription","amount","setAmount","Big","ampm","format","AddTransactionDialog","createTransaction","transactionInput","AddTransactionButton","showAddTransactionDialog","hideAddTransactionDialog","EditTransactionDialog","setInitialValues","updateTransaction","creditAccount","debitAccount","EditTransactionButton","isEditTransactionDialogVisible","showEditTransactionDialog","hideEditTransactionDialog","DeleteTransactionButton","deleteTransactionMutation","deleteTransaction","TransactionsGrid","TRANSACTIONS_ROUTE","TransactionsRoute","selectedAccountId","setSelectedAccountId","isAddTransactionDialogVisible","TransactionsButton","OrganizationSelect","organizations","organization","CurrentOrganizationSelectForm","setCurrentOrganizationId","organizationId","setOrganizationId","CURRENT_ORGANIZATION_SELECT_ROUTE","CurrentOrganizationSelectRoute","history","useHistory","push","Grid","justify","direction","style","OrganizationsButton","LogOutButton","logout","doLogout","BalanceSheetReport","balanceSheetReport","colSpan","assets","balance","mul","assetsTotalAmount","liabilities","liabilitiesTotalAmount","equity","equityTotalAmount","BALANCE_SHEET_REPORT_ROUTE","BalanceSheetReportRoute","IncomeStatementReport","incomeStatementReport","income","incomeTotalAmount","expenses","expensesTotalAmount","net","INCOME_STATEMENT_REPORT_ROUTE","IncomeStatementReportRoute","REPORTS_ROUTE","ReportsRoute","ReportsButton","AppDrawerButtonList","List","AppDrawer","isOpen","Drawer","clsx","IconButton","Divider","AppToolbar","isDrawerOpen","onOpenDrawer","AppBar","Toolbar","edge","aria-label","Typography","noWrap","ReconcileBankAccountTransactionDialog","bankAccountTransactionId","setAccountId","reconcileBankAccountTransaction","ReconcileBankAccountTransactionButton","isReconcileBankAccountTransactionDialogVisible","showReconcileBankAccountTransactionDialog","hideReconcileBankAccountTransactionDialog","columns","field","hide","valueFormatter","params","renderCell","row","BankAccountTransactionsGrid","pageNum","setPageNum","pageSize","setPageSize","loading","bankAccountTransactions","total","rows","pagination","rowCount","paginationMode","onPageChange","page","BankAccountTransactionsRoute","useParams","AppContent","exact","path","AppLayout","setDrawerOpen","setDrawerClosed","Container","maxWidth","LoginForm","useGenericFirebaseApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","login","emailAddress","setEmailAddress","password","setPassword","doLogin","auth","signInWithEmailAndPassword","currentUser","getIdToken","firebaseJwt","loginInput","inputProps","type","LOGIN_ROUTE","LoginRoute","AppRouter","meData","me","Loading","App","utils","DateFnsUtils","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1850bc8c.chunk.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gqlAccount = void 0;\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.gqlAccount = graphql_tag_1.default `\n  fragment Account on Account {\n    id\n    accountType\n    name\n  }\n`;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gqlTransaction = void 0;\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst account_1 = require(\"./account\");\nexports.gqlTransaction = graphql_tag_1.default `\n  fragment Transaction on Transaction {\n    id\n    creditAccount {\n      ...Account\n    }\n    debitAccount {\n      ...Account\n    }\n    date\n    amount\n    description\n  }\n  ${account_1.gqlAccount}\n`;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./gql\"), exports);\n__exportStar(require(\"./hooks\"), exports);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useClient = void 0;\nconst react_1 = require(\"react\");\nconst client_1 = require(\"@apollo/client\");\nconst context_1 = require(\"@apollo/client/link/context\");\nconst apollo_link_scalars_1 = require(\"apollo-link-scalars\");\nconst big_js_1 = __importDefault(require(\"big.js\"));\nconst useCurrentOrganizationId_1 = require(\"../../hooks/useCurrentOrganizationId\");\nconst useSchema_1 = require(\"./useSchema\");\nconst typesMap = {\n    Money: {\n        serialize: (value) => value.toString(),\n        parseValue: (value) => {\n            const retVal = value ? big_js_1.default(value) : null;\n            return retVal;\n        },\n    },\n};\nconst useClient = (uri, gqlSchema) => {\n    const schema = useSchema_1.useSchema(gqlSchema);\n    const [currentOrganizationId] = useCurrentOrganizationId_1.useCurrentOrganizationId();\n    const client = react_1.useMemo(() => {\n        if (!schema) {\n            return null;\n        }\n        const authLink = context_1.setContext((_, { headers }) => {\n            return {\n                headers: {\n                    ...headers,\n                    ...(currentOrganizationId\n                        ? { 'x-organization-id': currentOrganizationId }\n                        : {}),\n                },\n            };\n        });\n        const link = client_1.ApolloLink.from([\n            apollo_link_scalars_1.withScalars({ schema, typesMap }),\n            authLink,\n            client_1.createHttpLink({ uri, credentials: 'include' }),\n        ]);\n        return new client_1.ApolloClient({\n            link,\n            cache: new client_1.InMemoryCache(),\n            connectToDevTools: true,\n        });\n    }, [schema, uri, currentOrganizationId]);\n    return client;\n};\nexports.useClient = useClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useCurrentOrganizationId = void 0;\nconst useSessionStorage_1 = require(\"./useSessionStorage\");\nconst useCurrentOrganizationId = () => {\n    return useSessionStorage_1.useSessionStorage('currentOrganizationId');\n};\nexports.useCurrentOrganizationId = useCurrentOrganizationId;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useSessionStorage = void 0;\nconst react_1 = require(\"react\");\nconst useSessionStorage = (key) => {\n    const [state, setState] = react_1.useState(window.sessionStorage.getItem(key));\n    const memoizedState = react_1.useMemo(() => state !== null && state !== void 0 ? state : null, [state]);\n    const setValue = react_1.useCallback((value) => {\n        if (value === null) {\n            window.sessionStorage.removeItem(key);\n        }\n        else {\n            window.sessionStorage.setItem(key, value);\n        }\n        window.dispatchEvent(new Event('storage'));\n    }, []);\n    react_1.useEffect(() => {\n        const eventListener = () => {\n            setState(window.sessionStorage.getItem(key));\n        };\n        window.addEventListener('storage', eventListener);\n        return () => {\n            window.removeEventListener('storage', eventListener);\n        };\n    }, []);\n    return [memoizedState, setValue];\n};\nexports.useSessionStorage = useSessionStorage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useSchema = void 0;\nconst core_1 = require(\"@apollo/client/core\");\nconst graphql_1 = require(\"graphql\");\nconst schema_1 = require(\"@graphql-tools/schema\");\nconst react_1 = require(\"react\");\nconst useSchema = (gqlSchema) => {\n    const schema = react_1.useMemo(() => {\n        // GraphQL Schema definition.\n        const typeDefs = core_1.gql `\n      ${gqlSchema}\n    `;\n        const resolvers = {\n            // example of scalar type, which will parse the string into a custom class CustomDate which receives a Date object\n            Date: new graphql_1.GraphQLScalarType({\n                name: 'Date',\n                serialize: (parsed) => parsed && parsed.toISOString(),\n                parseValue: (raw) => raw && new Date(raw),\n                parseLiteral(ast) {\n                    if (ast.kind === graphql_1.Kind.STRING || ast.kind === graphql_1.Kind.INT) {\n                        return new Date(ast.value);\n                    }\n                    return null;\n                },\n            }),\n        };\n        // GraphQL Schema, required to use the link\n        return schema_1.makeExecutableSchema({\n            typeDefs,\n            resolvers,\n        });\n    }, [gqlSchema]);\n    return schema;\n};\nexports.useSchema = useSchema;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gqlBalanceSheetReport = void 0;\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst account_1 = require(\"./account\");\nexports.gqlBalanceSheetReport = graphql_tag_1.default `\n  fragment BalanceSheetReport on BalanceSheetReport {\n    date\n    assets {\n      account {\n        ...Account\n      }\n      balance\n    }\n    liabilities {\n      account {\n        ...Account\n      }\n      balance\n    }\n    equity {\n      account {\n        ...Account\n      }\n      balance\n    }\n    assetsTotalAmount\n    liabilitiesTotalAmount\n    equityTotalAmount\n  }\n  ${account_1.gqlAccount}\n`;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gqlIncomeStatementReport = void 0;\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst account_1 = require(\"./account\");\nexports.gqlIncomeStatementReport = graphql_tag_1.default `\n  fragment IncomeStatementReport on IncomeStatementReport {\n    startDate\n    endDate\n    income {\n      account {\n        ...Account\n      }\n      balance\n    }\n    expenses {\n      account {\n        ...Account\n      }\n      balance\n    }\n    incomeTotalAmount\n    expensesTotalAmount\n    net\n  }\n  ${account_1.gqlAccount}\n`;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gqlBankAccount = void 0;\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.gqlBankAccount = graphql_tag_1.default `\n  fragment BankAccount on BankAccount {\n    id\n    name\n    mask\n    plaidType\n    plaidSubtype\n  }\n`;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gqlBankAccountTransaction = void 0;\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.gqlBankAccountTransaction = graphql_tag_1.default `\n  fragment BankAccountTransaction on BankAccountTransaction {\n    id\n    name\n    timestamp\n    amount\n    pending\n    isReconciled\n  }\n`;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gqlOrganization = void 0;\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.gqlOrganization = graphql_tag_1.default `\n  fragment Organization on Organization {\n    id\n    name\n  }\n`;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gqlUser = void 0;\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.gqlUser = graphql_tag_1.default `\n  fragment User on User {\n    id\n    emailAddress\n  }\n`;\n","module.exports = \"scalar Date\\nscalar Money\\n\\nenum AccountTypeEnum {\\n  ASSET\\n  LIABILITY\\n  EXPENSE\\n  REVENUE\\n  EQUITY\\n}\\n\\ntype User {\\n  id: ID!\\n  emailAddress: String!\\n}\\n\\ntype Account {\\n  id: ID!\\n  accountType: AccountTypeEnum!\\n  name: String!\\n}\\n\\ntype BankAccount {\\n  id: ID!\\n  name: String\\n  mask: String\\n  plaidType: String\\n  plaidSubtype: String\\n}\\n\\ntype BankAccountTransaction {\\n  id: ID!\\n  bankAccountId: String!\\n  timestamp: Date!\\n  name: String\\n  pending: Boolean\\n  amount: String\\n  isReconciled: Boolean!\\n}\\n\\ntype BankAccountTransactionQueryResult {\\n  bankAccountTransactions: [BankAccountTransaction!]!\\n  total: Int!\\n}\\n\\ntype DeleteAccountResponse {\\n  id: ID\\n}\\n\\ntype Organization {\\n  id: ID!\\n  name: String!\\n}\\n\\ntype Transaction {\\n  id: ID!\\n  date: Date!\\n  creditAccount: Account!\\n  debitAccount: Account!\\n  amount: Money!\\n  description: String!\\n}\\n\\ntype DeleteTransactionResponse {\\n  id: ID\\n}\\n\\ntype RunningTransaction {\\n  transactionId: ID!\\n  date: Date!\\n  creditAmount: Money\\n  debitAmount: Money\\n  description: String!\\n  runningBalance: Money!\\n}\\n\\ntype BalanceSheetReport {\\n  date: Date!\\n  assets: [BalanceSheetReportAccount!]!\\n  liabilities: [BalanceSheetReportAccount!]!\\n  equity: [BalanceSheetReportAccount!]!\\n  assetsTotalAmount: Money!\\n  liabilitiesTotalAmount: Money!\\n  equityTotalAmount: Money!\\n}\\n\\ntype BalanceSheetReportAccount {\\n  account: Account!\\n  balance: Money!\\n}\\n\\ntype IncomeStatementReport {\\n  startDate: Date!\\n  endDate: Date!\\n  income: [IncomeStatementReportAccount!]!\\n  expenses: [IncomeStatementReportAccount!]!\\n  incomeTotalAmount: Money!\\n  expensesTotalAmount: Money!\\n  net: Money!\\n}\\n\\ntype IncomeStatementReportAccount {\\n  account: Account!\\n  balance: Money!\\n}\\n\\ntype Query {\\n  me: User\\n  accounts: [Account!]!\\n  account(accountId: ID!): Account\\n  bankAccounts: [BankAccount!]!\\n  bankAccountTransactions(bankAccountId: ID!, offset: Int!, limit: Int!, onlyUnreconciled: Boolean!): BankAccountTransactionQueryResult!\\n  organizations: [Organization!]!\\n  organization: Organization\\n  transactions: [Transaction!]!\\n  transaction(transactionId: ID!): Transaction\\n  transactionsForAccount(accountId: ID!): [RunningTransaction!]!\\n  transactionsForAccounts(accountIds: [ID!]!): [RunningTransaction!]!\\n  balanceSheetReport(date: Date!): BalanceSheetReport!\\n  incomeStatementReport(startDate: Date!, endDate: Date!): IncomeStatementReport!\\n}\\n\\ninput LoginInput {\\n  firebaseJwt: String!\\n}\\n\\ninput CreateAccountInput {\\n  accountType: AccountTypeEnum!\\n  name: String!\\n}\\n\\ninput UpdateAccountInput {\\n  name: String!\\n}\\n\\ninput CreateTransactionInput {\\n  date: Date!\\n  creditAccountId: ID!\\n  debitAccountId: ID!\\n  amount: Money!\\n  description: String!\\n}\\n\\ninput UpdateTransactionInput {\\n  date: Date!\\n  creditAccountId: ID!\\n  debitAccountId: ID!\\n  amount: Money!\\n  description: String!\\n}\\n\\ntype Mutation {\\n  login(loginInput: LoginInput!): Boolean!\\n  logout: Boolean!\\n  createAccount(accountInput: CreateAccountInput!): Account\\n  updateAccount(accountId: ID!, accountInput: UpdateAccountInput!): Account\\n  deleteAccount(accountId: ID!): DeleteAccountResponse!\\n  createTransaction(transactionInput: CreateTransactionInput!): Transaction\\n  updateTransaction(transactionId: ID!, transactionInput: UpdateTransactionInput!): Transaction\\n  deleteTransaction(transactionId: ID!): DeleteTransactionResponse!\\n  createPlaidLinkToken: String!\\n  submitPlaidPublicToken(publicToken: String!): Boolean!\\n  reconcileBankAccountTransaction(bankAccountTransactionId: ID!, accountId: ID!): Transaction!\\n}\";","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst schema = __importStar(require(\"./schema\"));\nexports.default = schema;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./client\"), exports);\n__exportStar(require(\"./fragments\"), exports);\n__exportStar(require(\"./mutations\"), exports);\n__exportStar(require(\"./queries\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./useApolloProvider\"), exports);\n__exportStar(require(\"./useClient\"), exports);\n__exportStar(require(\"./useSchema\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useApolloProvider = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst client_1 = require(\"@apollo/client\");\nconst react_1 = require(\"react\");\nconst useClient_1 = require(\"./useClient\");\nconst useApolloProvider = (uri, gqlSchema) => {\n    const client = useClient_1.useClient(uri, gqlSchema);\n    const WrappedApolloProvider = react_1.useMemo(() => {\n        const ApolloProvider = ({ loadingComponent, children, }) => {\n            const LoadingComponent = loadingComponent;\n            if (!client) {\n                return jsx_runtime_1.jsx(LoadingComponent, {}, void 0);\n            }\n            return (jsx_runtime_1.jsx(client_1.ApolloProvider, Object.assign({ client: client }, { children: children }), void 0));\n        };\n        return ApolloProvider;\n    }, [client]);\n    return WrappedApolloProvider;\n};\nexports.useApolloProvider = useApolloProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./balanceSheetReport\"), exports);\n__exportStar(require(\"./incomeStatementReport\"), exports);\n__exportStar(require(\"./transaction\"), exports);\n__exportStar(require(\"./account\"), exports);\n__exportStar(require(\"./bankAccount\"), exports);\n__exportStar(require(\"./bankAccountTransaction\"), exports);\n__exportStar(require(\"./organization\"), exports);\n__exportStar(require(\"./user\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./createAccount\"), exports);\n__exportStar(require(\"./createPlaidLinkToken\"), exports);\n__exportStar(require(\"./createTransaction\"), exports);\n__exportStar(require(\"./deleteAccount\"), exports);\n__exportStar(require(\"./deleteTransaction\"), exports);\n__exportStar(require(\"./login\"), exports);\n__exportStar(require(\"./logout\"), exports);\n__exportStar(require(\"./reconcileBankAccountTransaction\"), exports);\n__exportStar(require(\"./submitPlaidPublicToken\"), exports);\n__exportStar(require(\"./updateAccount\"), exports);\n__exportStar(require(\"./updateTransaction\"), exports);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useCreateAccountMutation = exports.gqlCreateAccountMutation = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst account_1 = require(\"../fragments/account\");\nexports.gqlCreateAccountMutation = graphql_tag_1.default `\n  mutation CreateAccount($accountInput: CreateAccountInput!) {\n    createAccount(accountInput: $accountInput) {\n      ...Account\n    }\n  }\n  ${account_1.gqlAccount}\n`;\nconst useCreateAccountMutation = () => {\n    const mutationTuple = client_1.useMutation(exports.gqlCreateAccountMutation);\n    return mutationTuple;\n};\nexports.useCreateAccountMutation = useCreateAccountMutation;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useCreatePlaidLinkTokenMutation = exports.gqlCreatePlaidLinkTokenMutation = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.gqlCreatePlaidLinkTokenMutation = graphql_tag_1.default `\n  mutation CreatePlaidLinkToken {\n    createPlaidLinkToken\n  }\n`;\nconst useCreatePlaidLinkTokenMutation = () => {\n    const mutationTuple = client_1.useMutation(exports.gqlCreatePlaidLinkTokenMutation);\n    return mutationTuple;\n};\nexports.useCreatePlaidLinkTokenMutation = useCreatePlaidLinkTokenMutation;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useCreateTransactionMutation = exports.gqlCreateTransactionMutation = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst transaction_1 = require(\"../fragments/transaction\");\nexports.gqlCreateTransactionMutation = graphql_tag_1.default `\n  mutation CreateTransaction($transactionInput: CreateTransactionInput!) {\n    createTransaction(transactionInput: $transactionInput) {\n      ...Transaction\n    }\n  }\n  ${transaction_1.gqlTransaction}\n`;\nconst useCreateTransactionMutation = () => {\n    const mutationTuple = client_1.useMutation(exports.gqlCreateTransactionMutation);\n    return mutationTuple;\n};\nexports.useCreateTransactionMutation = useCreateTransactionMutation;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useDeleteAccountMutation = exports.gqlDeleteAccountMutation = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst deleteAccountResponse_1 = require(\"../fragments/deleteAccountResponse\");\nexports.gqlDeleteAccountMutation = graphql_tag_1.default `\n  mutation DeleteAccount($accountId: ID!) {\n    deleteAccount(accountId: $accountId) {\n      ...DeleteAccountResponse\n    }\n  }\n  ${deleteAccountResponse_1.gqlDeleteAccountResponse}\n`;\nconst useDeleteAccountMutation = () => {\n    const mutationTuple = client_1.useMutation(exports.gqlDeleteAccountMutation);\n    return mutationTuple;\n};\nexports.useDeleteAccountMutation = useDeleteAccountMutation;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gqlDeleteAccountResponse = void 0;\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.gqlDeleteAccountResponse = graphql_tag_1.default `\n  fragment DeleteAccountResponse on DeleteAccountResponse {\n    id\n  }\n`;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useDeleteTransactionMutation = exports.gqlDeleteTransactionMutation = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst deleteTransactionResponse_1 = require(\"../fragments/deleteTransactionResponse\");\nexports.gqlDeleteTransactionMutation = graphql_tag_1.default `\n  mutation DeleteTransaction($transactionId: ID!) {\n    deleteTransaction(transactionId: $transactionId) {\n      ...DeleteTransactionResponse\n    }\n  }\n  ${deleteTransactionResponse_1.gqlDeleteTransactionResponse}\n`;\nconst useDeleteTransactionMutation = () => {\n    const mutationTuple = client_1.useMutation(exports.gqlDeleteTransactionMutation);\n    return mutationTuple;\n};\nexports.useDeleteTransactionMutation = useDeleteTransactionMutation;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gqlDeleteTransactionResponse = void 0;\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.gqlDeleteTransactionResponse = graphql_tag_1.default `\n  fragment DeleteTransactionResponse on DeleteTransactionResponse {\n    id\n  }\n`;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useLoginMutation = exports.gqlLoginMutation = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.gqlLoginMutation = graphql_tag_1.default `\n  mutation Login($loginInput: LoginInput!) {\n    login(loginInput: $loginInput)\n  }\n`;\nconst useLoginMutation = () => {\n    const mutationTuple = client_1.useMutation(exports.gqlLoginMutation);\n    return mutationTuple;\n};\nexports.useLoginMutation = useLoginMutation;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useLogoutMutation = exports.gqlLogoutMutation = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.gqlLogoutMutation = graphql_tag_1.default `\n  mutation Logout {\n    logout\n  }\n`;\nconst useLogoutMutation = () => {\n    const mutationTuple = client_1.useMutation(exports.gqlLogoutMutation);\n    return mutationTuple;\n};\nexports.useLogoutMutation = useLogoutMutation;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useReconcileBankAccountTransactionMutation = exports.gqlReconcileBankAccountTransactionMutation = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst transaction_1 = require(\"../fragments/transaction\");\nexports.gqlReconcileBankAccountTransactionMutation = graphql_tag_1.default `\n  mutation ReconcileBankAccountTransaction(\n    $bankAccountTransactionId: ID!\n    $accountId: ID!\n  ) {\n    reconcileBankAccountTransaction(\n      bankAccountTransactionId: $bankAccountTransactionId\n      accountId: $accountId\n    ) {\n      ...Transaction\n    }\n  }\n  ${transaction_1.gqlTransaction}\n`;\nconst useReconcileBankAccountTransactionMutation = () => {\n    const mutationTuple = client_1.useMutation(exports.gqlReconcileBankAccountTransactionMutation);\n    return mutationTuple;\n};\nexports.useReconcileBankAccountTransactionMutation = useReconcileBankAccountTransactionMutation;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useSubmitPlaidPublicTokenMutation = exports.gqlSubmitPlaidPublicTokenMutation = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.gqlSubmitPlaidPublicTokenMutation = graphql_tag_1.default `\n  mutation SubmitPlaidPublicToken($publicToken: String!) {\n    submitPlaidPublicToken(publicToken: $publicToken)\n  }\n`;\nconst useSubmitPlaidPublicTokenMutation = () => {\n    const mutationTuple = client_1.useMutation(exports.gqlSubmitPlaidPublicTokenMutation);\n    return mutationTuple;\n};\nexports.useSubmitPlaidPublicTokenMutation = useSubmitPlaidPublicTokenMutation;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useUpdateAccountMutation = exports.gqlUpdateAccountMutation = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst account_1 = require(\"../fragments/account\");\nexports.gqlUpdateAccountMutation = graphql_tag_1.default `\n  mutation UpdateAccount($accountId: ID!, $accountInput: UpdateAccountInput!) {\n    updateAccount(accountId: $accountId, accountInput: $accountInput) {\n      ...Account\n    }\n  }\n  ${account_1.gqlAccount}\n`;\nconst useUpdateAccountMutation = () => {\n    const mutationTuple = client_1.useMutation(exports.gqlUpdateAccountMutation);\n    return mutationTuple;\n};\nexports.useUpdateAccountMutation = useUpdateAccountMutation;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useUpdateTransactionMutation = exports.gqlUpdateTransactionMutation = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst transaction_1 = require(\"../fragments/transaction\");\nexports.gqlUpdateTransactionMutation = graphql_tag_1.default `\n  mutation UpdateTransaction(\n    $transactionId: ID!\n    $transactionInput: UpdateTransactionInput!\n  ) {\n    updateTransaction(\n      transactionId: $transactionId\n      transactionInput: $transactionInput\n    ) {\n      ...Transaction\n    }\n  }\n  ${transaction_1.gqlTransaction}\n`;\nconst useUpdateTransactionMutation = () => {\n    const mutationTuple = client_1.useMutation(exports.gqlUpdateTransactionMutation);\n    return mutationTuple;\n};\nexports.useUpdateTransactionMutation = useUpdateTransactionMutation;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./account\"), exports);\n__exportStar(require(\"./accounts\"), exports);\n__exportStar(require(\"./balanceSheetReport\"), exports);\n__exportStar(require(\"./bankAccounts\"), exports);\n__exportStar(require(\"./bankAccountTransactions\"), exports);\n__exportStar(require(\"./incomeStatementReport\"), exports);\n__exportStar(require(\"./me\"), exports);\n__exportStar(require(\"./organizations\"), exports);\n__exportStar(require(\"./transaction\"), exports);\n__exportStar(require(\"./transactions\"), exports);\n__exportStar(require(\"./transactionsForAccount\"), exports);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useAccountQuery = exports.gqlAccountQuery = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst account_1 = require(\"../fragments/account\");\nexports.gqlAccountQuery = graphql_tag_1.default `\n  query Account($accountId: ID!) {\n    account(accountId: $accountId) {\n      ...Account\n    }\n  }\n  ${account_1.gqlAccount}\n`;\nconst useAccountQuery = (accountId) => client_1.useQuery(exports.gqlAccountQuery, { variables: { accountId } });\nexports.useAccountQuery = useAccountQuery;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useAccountsQuery = exports.gqlAccountsQuery = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst account_1 = require(\"../fragments/account\");\nexports.gqlAccountsQuery = graphql_tag_1.default `\n  query Accounts {\n    accounts {\n      ...Account\n    }\n  }\n  ${account_1.gqlAccount}\n`;\nconst useAccountsQuery = () => client_1.useQuery(exports.gqlAccountsQuery, {});\nexports.useAccountsQuery = useAccountsQuery;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useBalanceSheetReportQuery = exports.gqlBalanceSheetReportQuery = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst balanceSheetReport_1 = require(\"../fragments/balanceSheetReport\");\nexports.gqlBalanceSheetReportQuery = graphql_tag_1.default `\n  query BalanceSheetReport($date: Date!) {\n    balanceSheetReport(date: $date) {\n      ...BalanceSheetReport\n    }\n  }\n  ${balanceSheetReport_1.gqlBalanceSheetReport}\n`;\nconst useBalanceSheetReportQuery = (date) => client_1.useQuery(exports.gqlBalanceSheetReportQuery, {\n    variables: { date },\n});\nexports.useBalanceSheetReportQuery = useBalanceSheetReportQuery;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useBankAccountsQuery = exports.gqlBankAccountsQuery = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst bankAccount_1 = require(\"../fragments/bankAccount\");\nexports.gqlBankAccountsQuery = graphql_tag_1.default `\n  query BankAccounts {\n    bankAccounts {\n      ...BankAccount\n    }\n  }\n  ${bankAccount_1.gqlBankAccount}\n`;\nconst useBankAccountsQuery = () => client_1.useQuery(exports.gqlBankAccountsQuery, {});\nexports.useBankAccountsQuery = useBankAccountsQuery;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useBankAccountTransactionsQuery = exports.gqlBankAccountTransactionsQuery = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst bankAccountTransaction_1 = require(\"../fragments/bankAccountTransaction\");\nexports.gqlBankAccountTransactionsQuery = graphql_tag_1.default `\n  query BankAccountTransactions(\n    $bankAccountId: ID!\n    $offset: Int!\n    $limit: Int!\n    $onlyUnreconciled: Boolean!\n  ) {\n    bankAccountTransactions(\n      bankAccountId: $bankAccountId\n      offset: $offset\n      limit: $limit\n      onlyUnreconciled: $onlyUnreconciled\n    ) {\n      bankAccountTransactions {\n        ...BankAccountTransaction\n      }\n      total\n    }\n  }\n  ${bankAccountTransaction_1.gqlBankAccountTransaction}\n`;\nconst useBankAccountTransactionsQuery = (bankAccountId, offset, limit, onlyUnreconciled = false) => client_1.useQuery(exports.gqlBankAccountTransactionsQuery, {\n    variables: {\n        bankAccountId,\n        offset,\n        limit,\n        onlyUnreconciled,\n    },\n});\nexports.useBankAccountTransactionsQuery = useBankAccountTransactionsQuery;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useIncomeStatementReportQuery = exports.gqlIncomeStatementReportQuery = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst incomeStatementReport_1 = require(\"../fragments/incomeStatementReport\");\nexports.gqlIncomeStatementReportQuery = graphql_tag_1.default `\n  query IncomeStatementReport($startDate: Date!, $endDate: Date!) {\n    incomeStatementReport(startDate: $startDate, endDate: $endDate) {\n      ...IncomeStatementReport\n    }\n  }\n  ${incomeStatementReport_1.gqlIncomeStatementReport}\n`;\nconst useIncomeStatementReportQuery = (startDate, endDate) => client_1.useQuery(exports.gqlIncomeStatementReportQuery, {\n    variables: { startDate, endDate },\n});\nexports.useIncomeStatementReportQuery = useIncomeStatementReportQuery;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useMeQuery = exports.gqlMeQuery = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst user_1 = require(\"../fragments/user\");\nexports.gqlMeQuery = graphql_tag_1.default `\n  query Me {\n    me {\n      ...User\n    }\n  }\n  ${user_1.gqlUser}\n`;\nconst useMeQuery = () => client_1.useQuery(exports.gqlMeQuery, {});\nexports.useMeQuery = useMeQuery;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useOrganizationsQuery = exports.gqlOrganizationsQuery = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst organization_1 = require(\"../fragments/organization\");\nexports.gqlOrganizationsQuery = graphql_tag_1.default `\n  query Organizations {\n    organizations {\n      ...Organization\n    }\n  }\n  ${organization_1.gqlOrganization}\n`;\nconst useOrganizationsQuery = () => client_1.useQuery(exports.gqlOrganizationsQuery, {});\nexports.useOrganizationsQuery = useOrganizationsQuery;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useTransactionQuery = exports.gqlTransactionQuery = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst transaction_1 = require(\"../fragments/transaction\");\nexports.gqlTransactionQuery = graphql_tag_1.default `\n  query Transaction($transactionId: ID!) {\n    transaction(transactionId: $transactionId) {\n      ...Transaction\n    }\n  }\n  ${transaction_1.gqlTransaction}\n`;\nconst useTransactionQuery = (transactionId) => client_1.useQuery(exports.gqlTransactionQuery, {\n    variables: { transactionId },\n});\nexports.useTransactionQuery = useTransactionQuery;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useTransactionsQuery = exports.gqlTransactionsQuery = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst transaction_1 = require(\"../fragments/transaction\");\nexports.gqlTransactionsQuery = graphql_tag_1.default `\n  query Transactions {\n    transactions {\n      ...Transaction\n    }\n  }\n  ${transaction_1.gqlTransaction}\n`;\nconst useTransactionsQuery = () => client_1.useQuery(exports.gqlTransactionsQuery);\nexports.useTransactionsQuery = useTransactionsQuery;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useTransactionsForAccountQuery = exports.gqlTransactionsForAccountQuery = void 0;\nconst client_1 = require(\"@apollo/client\");\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nconst runningTransaction_1 = require(\"../fragments/runningTransaction\");\nexports.gqlTransactionsForAccountQuery = graphql_tag_1.default `\n  query TransactionsForAccount($accountId: ID!) {\n    transactionsForAccount(accountId: $accountId) {\n      ...RunningTransaction\n    }\n  }\n  ${runningTransaction_1.RunningTransaction}\n`;\nconst useTransactionsForAccountQuery = (accountId) => client_1.useQuery(exports.gqlTransactionsForAccountQuery, {\n    variables: {\n        accountId,\n    },\n});\nexports.useTransactionsForAccountQuery = useTransactionsForAccountQuery;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RunningTransaction = void 0;\nconst graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexports.RunningTransaction = graphql_tag_1.default `\n  fragment RunningTransaction on RunningTransaction {\n    transactionId\n    date\n    creditAmount\n    debitAmount\n    description\n    runningBalance\n  }\n`;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./useCurrentOrganizationId\"), exports);\n__exportStar(require(\"./useFirebaseApp\"), exports);\n__exportStar(require(\"./useFlagState\"), exports);\n__exportStar(require(\"./useSessionStorage\"), exports);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useFirebaseApp = void 0;\nconst app_1 = __importDefault(require(\"firebase/app\"));\nrequire(\"firebase/auth\");\nlet appCache = null;\nconst useFirebaseApp = (options) => {\n    if (!appCache ||\n        Object.keys(options).length !== Object.keys(appCache.options).length ||\n        Object.keys(options).some((key) => options[key] !== (appCache === null || appCache === void 0 ? void 0 : appCache.options[key]))) {\n        const firebaseApp = app_1.default.initializeApp(options);\n        appCache = {\n            options,\n            app: firebaseApp,\n        };\n    }\n    return appCache.app;\n};\nexports.useFirebaseApp = useFirebaseApp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useFlagState = void 0;\nconst react_1 = require(\"react\");\nconst useFlagState = (initialValue = false) => {\n    const [value, setValue] = react_1.useState(initialValue);\n    const setTrue = react_1.useCallback(() => setValue(true), []);\n    const setFalse = react_1.useCallback(() => setValue(false), []);\n    return [value, setTrue, setFalse, setValue];\n};\nexports.useFlagState = useFlagState;\n","\"use strict\";\n/** ------------------------------------------------------\n * THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)\n * -------------------------------------------------------\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccountTypeEnum = void 0;\nvar AccountTypeEnum;\n(function (AccountTypeEnum) {\n    AccountTypeEnum[\"ASSET\"] = \"ASSET\";\n    AccountTypeEnum[\"LIABILITY\"] = \"LIABILITY\";\n    AccountTypeEnum[\"EXPENSE\"] = \"EXPENSE\";\n    AccountTypeEnum[\"REVENUE\"] = \"REVENUE\";\n    AccountTypeEnum[\"EQUITY\"] = \"EQUITY\";\n})(AccountTypeEnum = exports.AccountTypeEnum || (exports.AccountTypeEnum = {}));\n","import { FC } from 'react';\nimport { useApolloProvider } from '@sprice237/proton-shared';\nimport gqlSchema from '@sprice237/proton-gql/schema.graphql';\n\nexport const AppApolloProvider: FC<{ loadingComponent: FC }> = ({\n  loadingComponent,\n  children,\n}) => {\n  const LoadingComponent = loadingComponent;\n\n  const ApolloProvider = useApolloProvider(\n    process.env.REACT_APP_API_GQL_ENDPOINT ?? '',\n    gqlSchema,\n  );\n\n  return (\n    <ApolloProvider loadingComponent={LoadingComponent}>\n      {children}\n    </ApolloProvider>\n  );\n};\n","import { makeStyles } from '@material-ui/core';\n\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    overflowX: 'hidden',\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n","import { FC } from 'react';\nimport { BankAccount } from '@sprice237/proton-shared';\n\nexport const BankAccountMask: FC<{\n  bankAccount: BankAccount;\n}> = (props) => {\n  const { bankAccount } = props;\n\n  if (bankAccount.mask) {\n    return <>({bankAccount.mask})</>;\n  }\n  return null;\n};\n","import { FC, MouseEventHandler } from 'react';\nimport { Button, PropTypes } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nexport const AddButton: FC<{\n  color?: PropTypes.Color;\n  onClick?: MouseEventHandler<Element>;\n  disabled?: boolean;\n}> = (props) => {\n  const { color, onClick, disabled } = props;\n  return (\n    <Button\n      variant=\"contained\"\n      color={color}\n      startIcon={<AddIcon />}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      Add\n    </Button>\n  );\n};\n","import React, { FC, useEffect, useMemo, useState } from 'react';\nimport { useCreatePlaidLinkTokenMutation } from '@sprice237/proton-shared';\n\nexport const PlaidLoader: FC<{\n  children: (plaidLinkToken: string) => React.ReactElement;\n}> = (props) => {\n  const { children } = props;\n\n  const [createPlaidLinkToken] = useCreatePlaidLinkTokenMutation();\n  const [plaidLinkToken, setPlaidLinkToken] = useState<string>();\n\n  useEffect(() => {\n    (async (): Promise<void> => {\n      const { data } = await createPlaidLinkToken();\n      if (!data) {\n        return;\n      }\n      setPlaidLinkToken(data.createPlaidLinkToken);\n    })();\n  }, [createPlaidLinkToken]);\n\n  const retVal = useMemo(\n    () => (plaidLinkToken ? children(plaidLinkToken) : null),\n    [plaidLinkToken, children],\n  );\n\n  return retVal;\n};\n","import React, { FC, useMemo } from 'react';\nimport { usePlaidLink } from 'react-plaid-link';\n\nexport const PlaidAccountSelector: FC<{\n  plaidLinkToken: string;\n  onSubmit: (publicToken: string) => void;\n  children: (\n    open: Function,\n    ready: boolean,\n    error: ErrorEvent | null,\n  ) => React.ReactElement;\n}> = (props) => {\n  const { plaidLinkToken, onSubmit, children } = props;\n\n  const plaidConfig = {\n    token: plaidLinkToken,\n    onSuccess: onSubmit,\n  };\n\n  const { open, ready, error } = usePlaidLink(plaidConfig);\n\n  if (error) {\n    console.error(error);\n  }\n\n  const retVal = useMemo(() => children(open, ready, error), [\n    children,\n    open,\n    ready,\n    error,\n  ]);\n\n  return retVal;\n};\n","import React, { FC, useCallback } from 'react';\nimport { useSubmitPlaidPublicTokenMutation } from '@sprice237/proton-shared';\nimport { AddButton } from '../../common/AddButton';\nimport { PlaidLoader } from '../../plaid/PlaidLoader';\nimport { PlaidAccountSelector } from '../../plaid/PlaidAccountSelector';\n\nexport const AddBankAccountButton: FC = () => {\n  const [useSubmitPlaidPublicToken] = useSubmitPlaidPublicTokenMutation();\n\n  const onSubmit = useCallback(\n    (token: string) => {\n      useSubmitPlaidPublicToken({ variables: { publicToken: token } });\n    },\n    [useSubmitPlaidPublicToken],\n  );\n\n  return (\n    <PlaidLoader>\n      {(plaidLinkToken): React.ReactElement => (\n        <PlaidAccountSelector\n          plaidLinkToken={plaidLinkToken}\n          onSubmit={onSubmit}\n        >\n          {(open, ready): React.ReactElement => (\n            <AddButton onClick={(): void => open()} disabled={!ready}>\n              Connect a bank account\n            </AddButton>\n          )}\n        </PlaidAccountSelector>\n      )}\n    </PlaidLoader>\n  );\n};\n","import React, { FC } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useBankAccountsQuery } from '@sprice237/proton-shared';\nimport { BankAccountMask } from '../BankAccountMask';\nimport { AddBankAccountButton } from './AddBankAccountButton';\n\nexport const BankAccountsGrid: FC<{\n  allowAdd?: boolean;\n}> = (props) => {\n  const { allowAdd } = props;\n\n  const { data } = useBankAccountsQuery();\n  const bankAccounts = data?.bankAccounts ?? [];\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Id</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Type</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {bankAccounts.map((bankAccount) => (\n              <TableRow key={bankAccount.id}>\n                <TableCell>{bankAccount.id}</TableCell>\n                <TableCell>\n                  {bankAccount.name}{' '}\n                  <BankAccountMask bankAccount={bankAccount} />\n                </TableCell>\n                <TableCell>{bankAccount.plaidType}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {allowAdd && <AddBankAccountButton />}\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { BankAccountsGrid } from 'components/bankAccounts/bankAccountsGrid/BankAccountsGrid';\n\nexport const BANK_ACCOUNTS_ROUTE = '/bank-accounts';\n\nexport const BankAccountsRoute: FC = () => {\n  return (\n    <>\n      <BankAccountsGrid allowAdd />\n    </>\n  );\n};\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport AccountBanlanceIcon from '@material-ui/icons/AccountBalance';\nimport { BANK_ACCOUNTS_ROUTE } from 'components/routes/BankAccountsRoute';\n\nexport const BankAccountsButton: FC = () => {\n  return (\n    <ListItem button component={Link} to={BANK_ACCOUNTS_ROUTE}>\n      <ListItemIcon>\n        <AccountBanlanceIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Bank accounts\" />\n    </ListItem>\n  );\n};\n","import React, { FC, useCallback } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport schema from '@sprice237/proton-gql';\nimport { AccountType } from '@sprice237/proton-shared';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }),\n);\n\nexport const AccountTypeSelect: FC<{\n  label?: string;\n  disabled?: boolean;\n  value: AccountType | undefined;\n  onChange?: (value: AccountType) => void;\n}> = (props) => {\n  const { label, value, disabled, onChange } = props;\n  const classes = useStyles();\n\n  const doChange = useCallback(\n    (e: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n      if (onChange) {\n        onChange(e.target.value as AccountType);\n      }\n    },\n    [onChange],\n  );\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel shrink id=\"account-type-label\">\n        {label ?? 'Account type'}\n      </InputLabel>\n      <Select\n        labelId=\"account-type-label\"\n        value={value}\n        onChange={doChange}\n        displayEmpty\n        className={classes.selectEmpty}\n        disabled={disabled}\n      >\n        <MenuItem value={undefined}>\n          <em>(none)</em>\n        </MenuItem>\n        {Object.keys(schema.AccountTypeEnum).map((accountType) => (\n          <MenuItem key={accountType} value={accountType}>\n            {accountType}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n","import { FC, MouseEventHandler } from 'react';\nimport { Button, PropTypes } from '@material-ui/core';\n\nexport const SubmitButton: FC<{\n  color?: PropTypes.Color;\n  onClick?: MouseEventHandler<Element>;\n}> = (props) => {\n  const { color, onClick } = props;\n  return (\n    <Button variant=\"contained\" color={color} onClick={onClick}>\n      Submit\n    </Button>\n  );\n};\n","import { FC, useCallback, useState } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport schema from '@sprice237/proton-gql';\nimport { useCreateAccountMutation, gqlAccountsQuery } from '@sprice237/proton-shared';\nimport { AccountTypeSelect } from 'components/accountTypes/AccountTypeSelect';\nimport { SubmitButton } from '../../common/SubmitButton';\n\nexport const AddAccountDialog: FC<{\n  onClose?: () => void;\n}> = (props) => {\n  const { onClose } = props;\n\n  const [createAccount] = useCreateAccountMutation();\n\n  const [name, setName] = useState<string>('');\n  const [accountType, setAccountType] = useState<\n    schema.AccountTypeEnum | undefined\n  >(undefined);\n\n  const doSubmit = useCallback(async () => {\n    if (!accountType) {\n      return;\n    }\n\n    await createAccount({\n      variables: {\n        accountInput: {\n          name,\n          accountType,\n        },\n      },\n      refetchQueries: [\n        {\n          query: gqlAccountsQuery,\n        },\n      ],\n    });\n    onClose?.call(null);\n  }, [name, accountType]);\n\n  return (\n    <Dialog open onClose={onClose}>\n      <DialogTitle>Add account</DialogTitle>\n      <DialogContent>\n        <div>\n          <TextField\n            label=\"Account name\"\n            value={name}\n            onChange={(e): void => setName(e.target.value)}\n          />\n        </div>\n        <div>\n          <AccountTypeSelect\n            label=\"Account type\"\n            value={accountType}\n            onChange={setAccountType}\n          />\n        </div>\n        <div>\n          <SubmitButton onClick={doSubmit} />\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import { FC } from 'react';\nimport { useFlagState } from '@sprice237/proton-shared';\nimport { AddButton } from '../../common/AddButton';\nimport { AddAccountDialog } from './AddAccountDialog';\n\nexport const AddAccountButton: FC = () => {\n  const [\n    isAddccountDialogVisible,\n    showAddAccountDialog,\n    hideAddAccountDialog,\n  ] = useFlagState();\n\n  return (\n    <>\n      <AddButton onClick={showAddAccountDialog} />\n      {isAddccountDialogVisible && (\n        <AddAccountDialog onClose={hideAddAccountDialog} />\n      )}\n    </>\n  );\n};\n","import { FC, MouseEventHandler } from 'react';\nimport { Button, PropTypes } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\n\nexport const EditButton: FC<{\n  color?: PropTypes.Color;\n  onClick?: MouseEventHandler<Element>;\n}> = (props) => {\n  const { color, onClick } = props;\n  return (\n    <Button\n      variant=\"contained\"\n      color={color}\n      startIcon={<EditIcon />}\n      onClick={onClick}\n    >\n      Edit\n    </Button>\n  );\n};\n","import { FC, useCallback, useEffect, useState } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport schema from '@sprice237/proton-gql';\nimport { \n  useAccountQuery, \n  useUpdateAccountMutation, \n  gqlAccountsQuery, \n  useFlagState\n} from '@sprice237/proton-shared';\nimport { AccountTypeSelect } from 'components/accountTypes/AccountTypeSelect';\nimport { SubmitButton } from '../../common/SubmitButton';\n\nexport const EditAccountDialog: FC<{\n  accountId: string;\n  onClose?: () => void;\n}> = (props) => {\n  const { accountId, onClose } = props;\n\n  const { data } = useAccountQuery(accountId);\n  const [isLoaded, setIsLoaded] = useFlagState();\n\n  const [updateAccount] = useUpdateAccountMutation();\n\n  const [name, setName] = useState<string>('');\n  const [accountType, setAccountType] = useState<\n    schema.AccountTypeEnum | undefined\n  >(undefined);\n\n  const doSubmit = useCallback(async () => {\n    if (!accountType) {\n      return;\n    }\n\n    await updateAccount({\n      variables: {\n        accountId,\n        accountInput: {\n          name,\n        },\n      },\n      refetchQueries: [\n        {\n          query: gqlAccountsQuery,\n        },\n      ],\n    });\n    onClose?.call(null);\n  }, [name, accountType]);\n\n  useEffect(() => {\n    if (data) {\n      const { account } = data;\n      setName(account.name);\n      setAccountType(account.accountType);\n      setIsLoaded();\n    }\n  }, [data]);\n\n  return (\n    <Dialog open onClose={onClose}>\n      <DialogTitle>Edit account</DialogTitle>\n      <DialogContent>\n        {isLoaded && (\n          <>\n            <div>\n              <TextField\n                label=\"Account name\"\n                value={name}\n                onChange={(e): void => setName(e.target.value)}\n              />\n            </div>\n            <div>\n              <AccountTypeSelect\n                label=\"Account type\"\n                value={accountType}\n                disabled\n              />\n            </div>\n            <div>\n              <SubmitButton onClick={doSubmit} />\n            </div>\n          </>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import { FC } from 'react';\nimport { useFlagState } from '@sprice237/proton-shared';\nimport { EditButton } from '../../common/EditButton';\nimport { EditAccountDialog } from './EditAccountDialog';\n\nexport const EditAccountButton: FC<{ accountId: string }> = (props) => {\n  const { accountId } = props;\n\n  const [\n    isEditAccountDialogVisible,\n    showEditAccountDialog,\n    hideEditAccountDialog,\n  ] = useFlagState();\n\n  return (\n    <>\n      <EditButton onClick={showEditAccountDialog} />\n      {isEditAccountDialogVisible && (\n        <EditAccountDialog\n          accountId={accountId}\n          onClose={hideEditAccountDialog}\n        />\n      )}\n    </>\n  );\n};\n","import { FC, MouseEventHandler } from 'react';\nimport { Button, PropTypes } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport const DeleteButton: FC<{\n  color?: PropTypes.Color;\n  onClick?: MouseEventHandler<Element>;\n}> = (props) => {\n  const { color, onClick } = props;\n  return (\n    <Button\n      variant=\"contained\"\n      color={color}\n      startIcon={<DeleteIcon />}\n      onClick={onClick}\n    >\n      Delete\n    </Button>\n  );\n};\n","import { FC, useCallback } from 'react';\nimport { useDeleteAccountMutation, gqlAccountsQuery } from '@sprice237/proton-shared';\nimport { DeleteButton } from '../../common/DeleteButton';\n\nexport const DeleteAccountButton: FC<{ accountId: string }> = (props) => {\n  const { accountId } = props;\n\n  const [deleteAccountMutation] = useDeleteAccountMutation();\n\n  const deleteAccount = useCallback(() => {\n    deleteAccountMutation({\n      variables: {\n        accountId,\n      },\n      refetchQueries: [\n        {\n          query: gqlAccountsQuery,\n        },\n      ],\n    });\n  }, [deleteAccountMutation]);\n\n  return <DeleteButton onClick={deleteAccount} />;\n};\n","import { FC } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useAccountsQuery } from '@sprice237/proton-shared';\nimport { AddAccountButton } from './AddAccountButton';\nimport { EditAccountButton } from './EditAccountButton';\nimport { DeleteAccountButton } from './DeleteAccountButton';\n\nexport const AccountsGrid: FC<{\n  allowAdd?: boolean;\n  allowEdit?: boolean;\n  allowDelete?: boolean;\n}> = (props) => {\n  const { allowAdd, allowEdit, allowDelete } = props;\n  const { data } = useAccountsQuery();\n  const accounts = data?.accounts ?? [];\n\n  const showActionsColumn = allowEdit || allowDelete;\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Id</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Type</TableCell>\n              {showActionsColumn && <TableCell />}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {accounts.map((account) => (\n              <TableRow key={account.id}>\n                <TableCell>{account.id}</TableCell>\n                <TableCell>{account.name}</TableCell>\n                <TableCell>{account.accountType}</TableCell>\n                {showActionsColumn && (\n                  <TableCell>\n                    {allowEdit && <EditAccountButton accountId={account.id} />}\n                    {allowDelete && (\n                      <DeleteAccountButton accountId={account.id} />\n                    )}\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {allowAdd && <AddAccountButton />}\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { AccountsGrid } from '../accounts/accountsGrid/AccountsGrid';\n\nexport const ACCOUNTS_ROUTE = '/accounts';\n\nexport const AccountsRoute: FC = () => {\n  return (\n    <>\n      <AccountsGrid allowAdd allowEdit allowDelete />\n    </>\n  );\n};\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport { ACCOUNTS_ROUTE } from '../../routes/AccountsRoute';\n\nexport const AccountsButton: FC = () => {\n  return (\n    <ListItem button component={Link} to={ACCOUNTS_ROUTE}>\n      <ListItemIcon>\n        <AccountTreeIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Accounts\" />\n    </ListItem>\n  );\n};\n","import React, { FC } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { useAccountsQuery } from '@sprice237/proton-shared';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }),\n);\n\nexport const AccountSelect: FC<{\n  label?: string;\n  value: string | undefined;\n  onChange: (value: string) => void;\n}> = (props) => {\n  const { label, value, onChange } = props;\n  const classes = useStyles();\n  const { data } = useAccountsQuery();\n  const accounts = data?.accounts ?? [];\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel shrink id=\"transaction-account-label\">\n        {label ?? 'Account'}\n      </InputLabel>\n      <Select\n        labelId=\"account-label\"\n        value={value}\n        onChange={(e): void => onChange(e.target.value as string)}\n        displayEmpty\n        className={classes.selectEmpty}\n      >\n        <MenuItem value={undefined}>\n          <em>(none)</em>\n        </MenuItem>\n        {accounts.map((account) => (\n          <MenuItem key={account.id} value={account.id}>\n            {account.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n","import { FC } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useTransactionsForAccountQuery } from '@sprice237/proton-shared';\n\nexport const TransactionsForAccountGrid: FC<{\n  accountId: string;\n}> = (props) => {\n  const { accountId } = props;\n  const { data } = useTransactionsForAccountQuery(accountId);\n  const transactions = data?.transactionsForAccount ?? [];\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Description</TableCell>\n            <TableCell align=\"right\">Credit</TableCell>\n            <TableCell align=\"right\">Debit</TableCell>\n            <TableCell align=\"right\">Running balance</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <TableCell />\n            <TableCell>Starting balance</TableCell>\n            <TableCell align=\"right\" />\n            <TableCell align=\"right\" />\n            <TableCell align=\"right\">$0.00</TableCell>\n          </TableRow>\n          {transactions.map((transaction) => (\n            <TableRow key={transaction.transactionId}>\n              <TableCell>{transaction.date.toDateString()}</TableCell>\n              <TableCell>{transaction.description}</TableCell>\n              <TableCell align=\"right\">\n                {transaction.creditAmount?.toString()}\n              </TableCell>\n              <TableCell align=\"right\">\n                {transaction.debitAmount?.toString()}\n              </TableCell>\n              <TableCell align=\"right\">\n                {transaction.runningBalance.toString()}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { FC, useCallback, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { KeyboardDateTimePicker } from '@material-ui/pickers';\nimport Big from 'big.js';\nimport { AccountSelect } from '../../accounts/AccountSelect';\nimport { SubmitButton } from '../../common/SubmitButton';\n\nexport type CommonTransactionEditorModel = {\n  date: Date;\n  creditAccountId: string;\n  debitAccountId: string;\n  description: string;\n  amount: Big;\n};\n\nexport const CommonTransactionEditor: FC<{\n  initialValues?: CommonTransactionEditorModel;\n  onSubmit: (model: CommonTransactionEditorModel) => void;\n}> = (props) => {\n  const { initialValues, onSubmit } = props;\n\n  const [date, setDate] = useState<Date | null>(initialValues?.date ?? null);\n  const [creditAccountId, setCreditAccountId] = useState<string | undefined>(\n    initialValues?.creditAccountId ?? undefined,\n  );\n  const [debitAccountId, setDebitAccountId] = useState<string | undefined>(\n    initialValues?.debitAccountId ?? undefined,\n  );\n  const [description, setDescription] = useState(\n    initialValues?.description ?? '',\n  );\n  const [amount, setAmount] = useState(initialValues?.amount.toString() ?? '');\n\n  const doSubmit = useCallback(async () => {\n    if (\n      !date ||\n      !creditAccountId ||\n      !debitAccountId ||\n      !description ||\n      !amount\n    ) {\n      return;\n    }\n\n    onSubmit({\n      date,\n      creditAccountId,\n      debitAccountId,\n      description,\n      amount: Big(amount),\n    });\n  }, [date, creditAccountId, debitAccountId, description, amount]);\n\n  return (\n    <>\n      <div>\n        <KeyboardDateTimePicker\n          variant=\"inline\"\n          ampm\n          label=\"Date\"\n          value={date}\n          onChange={setDate}\n          format=\"MM/dd/yyyy hh:mm a\"\n        />\n      </div>\n      <div>\n        <AccountSelect\n          label=\"Credit account\"\n          value={creditAccountId}\n          onChange={setCreditAccountId}\n        />\n      </div>\n      <div>\n        <AccountSelect\n          label=\"Debit account\"\n          value={debitAccountId}\n          onChange={setDebitAccountId}\n        />\n      </div>\n      <div>\n        <TextField\n          label=\"Description\"\n          value={description}\n          onChange={(e): void => setDescription(e.target.value)}\n        />\n      </div>\n      <div>\n        <TextField\n          label=\"Amount\"\n          value={amount}\n          onChange={(e): void => setAmount(e.target.value)}\n        />\n      </div>\n      <div>\n        <SubmitButton onClick={doSubmit} />\n      </div>\n    </>\n  );\n};\n","import React, { FC, useCallback } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { \n  useCreateTransactionMutation, \n  gqlTransactionsForAccountQuery,\n  gqlTransactionsQuery\n} from '@sprice237/proton-shared';\nimport {\n  CommonTransactionEditor,\n  CommonTransactionEditorModel,\n} from './CommonTransactionEditor';\n\nexport const AddTransactionDialog: FC<{\n  onClose?: () => void;\n}> = (props) => {\n  const { onClose } = props;\n\n  const [createTransaction] = useCreateTransactionMutation();\n\n  const doSubmit = useCallback(\n    async (transactionInput: CommonTransactionEditorModel) => {\n      const { creditAccountId, debitAccountId } = transactionInput;\n      await createTransaction({\n        variables: {\n          transactionInput,\n        },\n        refetchQueries: [\n          {\n            query: gqlTransactionsForAccountQuery,\n            variables: {\n              accountId: creditAccountId,\n            },\n          },\n          {\n            query: gqlTransactionsForAccountQuery,\n            variables: {\n              accountId: debitAccountId,\n            },\n          },\n          {\n            query: gqlTransactionsQuery,\n          },\n        ],\n      });\n      onClose?.call(null);\n    },\n    [createTransaction, onClose],\n  );\n\n  return (\n    <Dialog open onClose={onClose}>\n      <DialogTitle>Add transaction</DialogTitle>\n      <DialogContent>\n        <CommonTransactionEditor onSubmit={doSubmit} />\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import { FC } from 'react';\nimport { useFlagState } from '@sprice237/proton-shared';\nimport { AddButton } from '../../common/AddButton';\nimport { AddTransactionDialog } from './AddTransactionDialog';\n\nexport const AddTransactionButton: FC = () => {\n  const [\n    isAddccountDialogVisible,\n    showAddTransactionDialog,\n    hideAddTransactionDialog,\n  ] = useFlagState();\n\n  return (\n    <>\n      <AddButton onClick={showAddTransactionDialog} />\n      {isAddccountDialogVisible && (\n        <AddTransactionDialog onClose={hideAddTransactionDialog} />\n      )}\n    </>\n  );\n};\n","import { FC, useCallback, useEffect, useState } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { \n  useTransactionQuery,\n  useUpdateTransactionMutation,\n  gqlTransactionsForAccountQuery,\n  gqlTransactionsQuery\n } from '@sprice237/proton-shared';\nimport {\n  CommonTransactionEditor,\n  CommonTransactionEditorModel,\n} from './CommonTransactionEditor';\n\nexport const EditTransactionDialog: FC<{\n  transactionId: string;\n  onClose?: () => void;\n}> = (props) => {\n  const { transactionId, onClose } = props;\n\n  const { data } = useTransactionQuery(transactionId);\n  const [initialValues, setInitialValues] = useState<\n    CommonTransactionEditorModel | undefined\n  >(undefined);\n\n  const [updateTransaction] = useUpdateTransactionMutation();\n\n  const doSubmit = useCallback(\n    async (transactionInput: CommonTransactionEditorModel) => {\n      const { creditAccountId, debitAccountId } = transactionInput;\n      await updateTransaction({\n        variables: {\n          transactionId,\n          transactionInput,\n        },\n        refetchQueries: [\n          {\n            query: gqlTransactionsForAccountQuery,\n            variables: {\n              accountId: creditAccountId,\n            },\n          },\n          {\n            query: gqlTransactionsForAccountQuery,\n            variables: {\n              accountId: debitAccountId,\n            },\n          },\n          {\n            query: gqlTransactionsQuery,\n          },\n        ],\n      });\n      onClose?.call(null);\n    },\n    [updateTransaction, onClose],\n  );\n\n  useEffect(() => {\n    if (data) {\n      const {\n        transaction: {\n          date,\n          creditAccount: { id: creditAccountId },\n          debitAccount: { id: debitAccountId },\n          description,\n          amount,\n        },\n      } = data;\n\n      setInitialValues({\n        date,\n        creditAccountId,\n        debitAccountId,\n        description,\n        amount,\n      });\n    }\n  }, [data]);\n\n  return (\n    <Dialog open onClose={onClose}>\n      <DialogTitle>Edit transaction</DialogTitle>\n      <DialogContent>\n        {initialValues && (\n          <CommonTransactionEditor\n            initialValues={initialValues}\n            onSubmit={doSubmit}\n          />\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import { FC } from 'react';\nimport { useFlagState } from '@sprice237/proton-shared';\nimport { EditButton } from '../../common/EditButton';\nimport { EditTransactionDialog } from './EditTransactionDialog';\n\nexport const EditTransactionButton: FC<{ transactionId: string }> = (props) => {\n  const { transactionId } = props;\n\n  const [\n    isEditTransactionDialogVisible,\n    showEditTransactionDialog,\n    hideEditTransactionDialog,\n  ] = useFlagState();\n\n  return (\n    <>\n      <EditButton onClick={showEditTransactionDialog} />\n      {isEditTransactionDialogVisible && (\n        <EditTransactionDialog\n          transactionId={transactionId}\n          onClose={hideEditTransactionDialog}\n        />\n      )}\n    </>\n  );\n};\n","import { FC, useCallback } from 'react';\nimport { useDeleteTransactionMutation, gqlTransactionsQuery } from '@sprice237/proton-shared';\nimport { DeleteButton } from '../../common/DeleteButton';\n\nexport const DeleteTransactionButton: FC<{ transactionId: string }> = (\n  props,\n) => {\n  const { transactionId } = props;\n\n  const [deleteTransactionMutation] = useDeleteTransactionMutation();\n\n  const deleteTransaction = useCallback(() => {\n    deleteTransactionMutation({\n      variables: {\n        transactionId,\n      },\n      refetchQueries: [\n        {\n          query: gqlTransactionsQuery,\n        },\n      ],\n    });\n  }, [deleteTransactionMutation]);\n\n  return <DeleteButton onClick={deleteTransaction} />;\n};\n","import { FC } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useTransactionsQuery } from '@sprice237/proton-shared';\nimport { AddTransactionButton } from './AddTransactionButton';\nimport { EditTransactionButton } from './EditTransactionButton';\nimport { DeleteTransactionButton } from './DeleteTransactionButton';\n\nexport const TransactionsGrid: FC<{\n  allowAdd?: boolean;\n  allowEdit?: boolean;\n  allowDelete?: boolean;\n}> = (props) => {\n  const { allowAdd, allowEdit, allowDelete } = props;\n  const { data } = useTransactionsQuery();\n  const transactions = data?.transactions ?? [];\n\n  const showActionsColumn = allowEdit || allowDelete;\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>Credit account</TableCell>\n              <TableCell>Debit account</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell align=\"right\">Amount</TableCell>\n              {showActionsColumn && <TableCell />}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {transactions.map((transaction) => (\n              <TableRow key={transaction.id}>\n                <TableCell>{transaction.date.toDateString()}</TableCell>\n                <TableCell>{transaction.creditAccount.name}</TableCell>\n                <TableCell>{transaction.debitAccount.name}</TableCell>\n                <TableCell>{transaction.description}</TableCell>\n                <TableCell align=\"right\">\n                  {transaction.amount.toString()}\n                </TableCell>\n                {showActionsColumn && (\n                  <TableCell>\n                    {allowEdit && (\n                      <EditTransactionButton transactionId={transaction.id} />\n                    )}\n                    {allowDelete && (\n                      <DeleteTransactionButton transactionId={transaction.id} />\n                    )}\n                  </TableCell>\n                )}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {allowAdd && <AddTransactionButton />}\n    </>\n  );\n};\n","import { FC, useState } from 'react';\nimport { useFlagState } from '@sprice237/proton-shared';\nimport { AccountSelect } from '../accounts/AccountSelect';\nimport { TransactionsForAccountGrid } from '../transactions/TransactionsForAccountGrid';\nimport { AddButton } from '../common/AddButton';\nimport { AddTransactionDialog } from '../transactions/transactionsGrid/AddTransactionDialog';\nimport { TransactionsGrid } from '../transactions/transactionsGrid/TransactionsGrid';\n\nexport const TRANSACTIONS_ROUTE = '/transactions';\n\nexport const TransactionsRoute: FC = () => {\n  const [selectedAccountId, setSelectedAccountId] = useState<\n    string | undefined\n  >(undefined);\n\n  const [\n    isAddTransactionDialogVisible,\n    showAddTransactionDialog,\n    hideAddTransactionDialog,\n  ] = useFlagState();\n\n  return (\n    <>\n      <AccountSelect\n        value={selectedAccountId}\n        onChange={setSelectedAccountId}\n      />\n      {selectedAccountId && (\n        <>\n          <TransactionsForAccountGrid accountId={selectedAccountId} />\n          <AddButton color=\"primary\" onClick={showAddTransactionDialog} />\n          {isAddTransactionDialogVisible && (\n            <AddTransactionDialog onClose={hideAddTransactionDialog} />\n          )}\n        </>\n      )}\n      <TransactionsGrid allowAdd allowEdit allowDelete />\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport { TRANSACTIONS_ROUTE } from '../../routes/TransactionsRoute';\n\nexport const TransactionsButton: FC = () => {\n  return (\n    <ListItem button component={Link} to={TRANSACTIONS_ROUTE}>\n      <ListItemIcon>\n        <CreditCardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Transactions\" />\n    </ListItem>\n  );\n};\n","import React, { FC } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { useOrganizationsQuery } from '@sprice237/proton-shared';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }),\n);\n\nexport const OrganizationSelect: FC<{\n  label?: string;\n  value: string | undefined;\n  onChange: (value: string) => void;\n}> = (props) => {\n  const { label, value, onChange } = props;\n  const classes = useStyles();\n  const { data } = useOrganizationsQuery();\n  const organizations = data?.organizations ?? [];\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel shrink id=\"transaction-organization-label\">\n        {label ?? 'Organization'}\n      </InputLabel>\n      <Select\n        labelId=\"organization-label\"\n        value={value}\n        onChange={(e): void => onChange(e.target.value as string)}\n        displayEmpty\n        className={classes.selectEmpty}\n      >\n        <MenuItem value={undefined}>\n          <em>(none)</em>\n        </MenuItem>\n        {organizations.map((organization) => (\n          <MenuItem key={organization.id} value={organization.id}>\n            {organization.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, { FC, useCallback, useState } from 'react';\nimport { useCurrentOrganizationId } from '@sprice237/proton-shared';\nimport { SubmitButton } from '../common/SubmitButton';\nimport { OrganizationSelect } from '../organizations/OrganizationSelect';\n\nexport const CurrentOrganizationSelectForm: FC<{ onSubmit: () => void }> = (\n  props,\n) => {\n  const { onSubmit } = props;\n\n  const [\n    currentOrganizationId,\n    setCurrentOrganizationId,\n  ] = useCurrentOrganizationId();\n  const [organizationId, setOrganizationId] = useState<string | undefined>(\n    currentOrganizationId ?? undefined,\n  );\n\n  const doSubmit = useCallback(async () => {\n    if (organizationId) {\n      setCurrentOrganizationId(organizationId);\n      onSubmit();\n    }\n  }, [organizationId]);\n\n  return (\n    <>\n      <div>\n        <OrganizationSelect\n          value={organizationId}\n          onChange={setOrganizationId}\n        />\n      </div>\n      <div>\n        <SubmitButton onClick={doSubmit} />\n      </div>\n    </>\n  );\n};\n","import React, { FC, useCallback } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport { CurrentOrganizationSelectForm } from '../auth/CurrentOrganizationSelectForm';\n\nexport const CURRENT_ORGANIZATION_SELECT_ROUTE = '/current-organization';\n\nexport const CurrentOrganizationSelectRoute: FC = () => {\n  const history = useHistory();\n\n  const onSubmit = useCallback(() => {\n    history.push('/');\n  }, []);\n\n  return (\n    <Grid\n      container\n      spacing={0}\n      alignItems=\"center\"\n      justify=\"center\"\n      direction=\"column\"\n      style={{ height: '100vh' }}\n    >\n      <CurrentOrganizationSelectForm onSubmit={onSubmit} />\n    </Grid>\n  );\n};\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport PeopleIcon from '@material-ui/icons/People';\nimport { CURRENT_ORGANIZATION_SELECT_ROUTE } from 'components/routes/CurrentOrganizationSelectRoute';\n\nexport const OrganizationsButton: FC = () => {\n  return (\n    <ListItem button component={Link} to={CURRENT_ORGANIZATION_SELECT_ROUTE}>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Organization\" />\n    </ListItem>\n  );\n};\n","import React, { FC, useCallback } from 'react';\n\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport { useLogoutMutation, gqlMeQuery } from '@sprice237/proton-shared';\n\nexport const LogOutButton: FC = () => {\n  const [logout] = useLogoutMutation();\n\n  const doLogout = useCallback(() => {\n    logout({\n      refetchQueries: [\n        {\n          query: gqlMeQuery,\n        },\n      ],\n    });\n  }, [logout]);\n\n  return (\n    <ListItem button onClick={doLogout}>\n      <ListItemIcon>\n        <ExitToAppIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Log out\" />\n    </ListItem>\n  );\n};\n","import React, { FC } from 'react';\nimport { useBalanceSheetReportQuery } from '@sprice237/proton-shared';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst date = new Date();\n\nexport const BalanceSheetReport: FC = () => {\n  const { data } = useBalanceSheetReportQuery(date);\n  const balanceSheetReport = data?.balanceSheetReport;\n\n  if (!balanceSheetReport) {\n    return null;\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell colSpan={2}>\n              <h1>Assets</h1>\n            </TableCell>\n          </TableRow>\n          {balanceSheetReport.assets.map(({ account, balance }) => (\n            <TableRow key={account.id}>\n              <TableCell>{account.name}</TableCell>\n              <TableCell>{balance.mul(-1).toString()}</TableCell>\n            </TableRow>\n          ))}\n          <TableRow>\n            <TableCell>\n              <strong>Total assets</strong>\n            </TableCell>\n            <TableCell>\n              <strong>\n                {balanceSheetReport.assetsTotalAmount.mul(-1).toString()}\n              </strong>\n            </TableCell>\n          </TableRow>\n\n          <TableRow>\n            <TableCell colSpan={2}>\n              <h1>Liabilities</h1>\n            </TableCell>\n          </TableRow>\n          {balanceSheetReport.liabilities.map(({ account, balance }) => (\n            <TableRow key={account.id}>\n              <TableCell>{account.name}</TableCell>\n              <TableCell>{balance.toString()}</TableCell>\n            </TableRow>\n          ))}\n          <TableRow>\n            <TableCell>\n              <strong>Total liabilities</strong>\n            </TableCell>\n            <TableCell>\n              <strong>\n                {balanceSheetReport.liabilitiesTotalAmount.toString()}\n              </strong>\n            </TableCell>\n          </TableRow>\n\n          <TableRow>\n            <TableCell colSpan={2}>\n              <h1>Equity</h1>\n            </TableCell>\n          </TableRow>\n          {balanceSheetReport.equity.map(({ account, balance }) => (\n            <TableRow key={account.id}>\n              <TableCell>{account.name}</TableCell>\n              <TableCell>{balance.toString()}</TableCell>\n            </TableRow>\n          ))}\n          <TableRow>\n            <TableCell>\n              <strong>Total equity</strong>\n            </TableCell>\n            <TableCell>\n              <strong>{balanceSheetReport.equityTotalAmount.toString()}</strong>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { BalanceSheetReport } from 'components/reports/balanceSheet/BalanceSheetReport';\nimport React, { FC } from 'react';\n\nexport const BALANCE_SHEET_REPORT_ROUTE = '/reports/balance-sheet';\n\nexport const BalanceSheetReportRoute: FC = () => {\n  return <BalanceSheetReport />;\n};\n","import React, { FC } from 'react';\nimport { useIncomeStatementReportQuery } from '@sprice237/proton-shared';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst startDate = new Date('2000-01-01T00:00:00Z');\nconst endDate = new Date();\n\nexport const IncomeStatementReport: FC = () => {\n  const { data } = useIncomeStatementReportQuery(startDate, endDate);\n  const incomeStatementReport = data?.incomeStatementReport;\n\n  if (!incomeStatementReport) {\n    return null;\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell colSpan={2}>\n              <h1>Income</h1>\n            </TableCell>\n          </TableRow>\n          {incomeStatementReport.income.map(({ account, balance }) => (\n            <TableRow key={account.id}>\n              <TableCell>{account.name}</TableCell>\n              <TableCell>{balance.toString()}</TableCell>\n            </TableRow>\n          ))}\n          <TableRow>\n            <TableCell>\n              <strong>Total income</strong>\n            </TableCell>\n            <TableCell>\n              <strong>\n                {incomeStatementReport.incomeTotalAmount.toString()}\n              </strong>\n            </TableCell>\n          </TableRow>\n\n          <TableRow>\n            <TableCell colSpan={2}>\n              <h1>Expenses</h1>\n            </TableCell>\n          </TableRow>\n          {incomeStatementReport.expenses.map(({ account, balance }) => (\n            <TableRow key={account.id}>\n              <TableCell>{account.name}</TableCell>\n              <TableCell>{balance.mul(-1).toString()}</TableCell>\n            </TableRow>\n          ))}\n          <TableRow>\n            <TableCell>\n              <strong>Total expenses</strong>\n            </TableCell>\n            <TableCell>\n              <strong>\n                {incomeStatementReport.expensesTotalAmount.mul(-1).toString()}\n              </strong>\n            </TableCell>\n          </TableRow>\n\n          <TableRow>\n            <TableCell colSpan={2}>\n              <h1>Net</h1>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <strong>Net</strong>\n            </TableCell>\n            <TableCell>\n              <strong>{incomeStatementReport.net.toString()}</strong>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import React, { FC } from 'react';\nimport { IncomeStatementReport } from '../reports/incomeStatement/IncomeStatementReport';\n\nexport const INCOME_STATEMENT_REPORT_ROUTE = '/reports/income-statement';\n\nexport const IncomeStatementReportRoute: FC = () => {\n  return <IncomeStatementReport />;\n};\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { BALANCE_SHEET_REPORT_ROUTE } from './BalanceSheetReportRoute';\nimport { INCOME_STATEMENT_REPORT_ROUTE } from './IncomeStatementReportRoute';\n\nexport const REPORTS_ROUTE = '/reports';\n\nexport const ReportsRoute: FC = () => {\n  return (\n    <ul>\n      <li>\n        <Link to={BALANCE_SHEET_REPORT_ROUTE}>Balance sheet</Link>\n      </li>\n      <li>\n        <Link to={INCOME_STATEMENT_REPORT_ROUTE}>Income statement</Link>\n      </li>\n    </ul>\n  );\n};\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport { REPORTS_ROUTE } from 'components/routes/ReportsRoute';\n\nexport const ReportsButton: FC = () => {\n  return (\n    <ListItem button component={Link} to={REPORTS_ROUTE}>\n      <ListItemIcon>\n        <AssessmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Reports\" />\n    </ListItem>\n  );\n};\n","import React, { FC } from 'react';\n\nimport { List } from '@material-ui/core';\nimport { BankAccountsButton } from './BankAccountsButton';\nimport { AccountsButton } from './AccountsButton';\nimport { TransactionsButton } from './TransactionsButton';\nimport { OrganizationsButton } from './OrganizationsButton';\nimport { LogOutButton } from './LogOutButton';\nimport { ReportsButton } from './ReportsButton';\n\nexport const AppDrawerButtonList: FC = () => {\n  return (\n    <List>\n      <BankAccountsButton />\n      <AccountsButton />\n      <TransactionsButton />\n      <OrganizationsButton />\n      <ReportsButton />\n      <LogOutButton />\n    </List>\n  );\n};\n","import React, { FC } from 'react';\n\nimport { Drawer, IconButton, Divider } from '@material-ui/core';\nimport clsx from 'clsx';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { useStyles } from '../useStyles';\nimport { AppDrawerButtonList } from './AppDrawerButtonList';\n\nexport const AppDrawer: FC<{ isOpen: boolean; onClose: () => unknown }> = (\n  props,\n) => {\n  const { isOpen, onClose } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: clsx(classes.drawerPaper, !isOpen && classes.drawerPaperClose),\n      }}\n      open={isOpen}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={onClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <AppDrawerButtonList />\n    </Drawer>\n  );\n};\n","import { FC } from 'react';\n\nimport { Toolbar, IconButton, Typography, AppBar } from '@material-ui/core';\nimport clsx from 'clsx';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useStyles } from './useStyles';\n\nexport const AppToolbar: FC<{\n  isDrawerOpen: boolean;\n  onOpenDrawer: () => unknown;\n}> = (props) => {\n  const { isDrawerOpen, onOpenDrawer } = props;\n\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      position=\"absolute\"\n      className={clsx(classes.appBar, isDrawerOpen && classes.appBarShift)}\n    >\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={onOpenDrawer}\n          className={clsx(\n            classes.menuButton,\n            isDrawerOpen && classes.menuButtonHidden,\n          )}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}\n        >\n          Proton\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import React, { FC, useCallback, useState } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useReconcileBankAccountTransactionMutation } from '@sprice237/proton-shared';\nimport { AccountSelect } from '../../accounts/AccountSelect';\nimport { SubmitButton } from '../../common/SubmitButton';\n\nexport const ReconcileBankAccountTransactionDialog: FC<{\n  bankAccountTransactionId: string;\n  onClose?: () => void;\n}> = (props) => {\n  const { bankAccountTransactionId, onClose } = props;\n\n  const [accountId, setAccountId] = useState<string | undefined>(undefined);\n  const [\n    reconcileBankAccountTransaction,\n  ] = useReconcileBankAccountTransactionMutation();\n\n  const doSubmit = useCallback(async () => {\n    if (!accountId) {\n      return;\n    }\n    await reconcileBankAccountTransaction({\n      variables: {\n        bankAccountTransactionId,\n        accountId,\n      },\n    });\n    onClose?.call(null);\n  }, [accountId, reconcileBankAccountTransaction, onClose]);\n\n  return (\n    <Dialog open onClose={onClose}>\n      <DialogTitle>Reconcile transaction</DialogTitle>\n      <DialogContent>\n        <div>\n          <AccountSelect\n            label=\"Account\"\n            value={accountId}\n            onChange={setAccountId}\n          />\n        </div>\n        <div>\n          <SubmitButton onClick={doSubmit} />\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import React, { FC } from 'react';\nimport { useFlagState } from '@sprice237/proton-shared';\nimport { Button } from '@material-ui/core';\nimport { ReconcileBankAccountTransactionDialog } from './ReconcileBankAccountTransactionDialog';\n\nexport type ReconcileBankAccountTransactionButtonProps = {\n  bankAccountTransactionId: string;\n};\n\nexport const ReconcileBankAccountTransactionButton: FC<ReconcileBankAccountTransactionButtonProps> = (\n  props,\n) => {\n  const { bankAccountTransactionId } = props;\n\n  const [\n    isReconcileBankAccountTransactionDialogVisible,\n    showReconcileBankAccountTransactionDialog,\n    hideReconcileBankAccountTransactionDialog,\n  ] = useFlagState();\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        onClick={showReconcileBankAccountTransactionDialog}\n      >\n        Reconcile\n      </Button>\n      {isReconcileBankAccountTransactionDialogVisible && (\n        <ReconcileBankAccountTransactionDialog\n          bankAccountTransactionId={bankAccountTransactionId}\n          onClose={hideReconcileBankAccountTransactionDialog}\n        />\n      )}\n    </>\n  );\n};\n","import React, { FC, useState } from 'react';\nimport { useBankAccountTransactionsQuery } from '@sprice237/proton-shared';\nimport {\n  DataGrid,\n  GridColumns,\n  GridPageChangeParams,\n} from '@material-ui/data-grid';\nimport { ReconcileBankAccountTransactionButton } from './ReconcileBankAccountTransactionButton';\n\nconst columns: GridColumns = [\n  {\n    field: 'id',\n    width: 350,\n    hide: true,\n  },\n  {\n    field: 'timestamp',\n    width: 225,\n    valueFormatter: (params): string => (params.value as Date).toISOString(),\n  },\n  {\n    field: 'name',\n    width: 400,\n  },\n  {\n    field: 'amount',\n    width: 150,\n  },\n  {\n    field: 'reconcile',\n    width: 140,\n    renderCell: ({ row }): React.ReactElement => (\n      <ReconcileBankAccountTransactionButton\n        bankAccountTransactionId={row.id as string}\n      />\n    ),\n  },\n];\n\nexport const BankAccountTransactionsGrid: FC<{\n  bankAccountId: string;\n}> = (props) => {\n  const { bankAccountId } = props;\n\n  const [pageNum, setPageNum] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n\n  const handlePageChange = (params: GridPageChangeParams): void => {\n    setPageNum(params.page);\n    setPageSize(params.pageSize);\n  };\n\n  const { data, loading } = useBankAccountTransactionsQuery(\n    bankAccountId,\n    pageNum * pageSize,\n    pageSize,\n    true,\n  );\n\n  const { bankAccountTransactions, total } = data?.bankAccountTransactions ?? {\n    bankAccountTransactions: [],\n    total: undefined,\n  };\n\n  return (\n    <div style={{ height: '400px' }}>\n      <DataGrid\n        rows={bankAccountTransactions}\n        columns={columns}\n        pagination\n        pageSize={pageSize}\n        rowCount={total}\n        paginationMode=\"server\"\n        onPageChange={handlePageChange}\n        loading={loading}\n      />\n    </div>\n  );\n};\n","import { BankAccountTransactionsGrid } from 'components/bankAccountTransactions/bankAccountTransactionsGrid/BankAccountTransactionsGrid';\nimport React, { FC } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const BANK_ACCOUNT_TRANSACTIONS_ROUTE =\n  '/bank-accounts/:bankAccountId/transactions';\n\nexport const BankAccountTransactionsRoute: FC = () => {\n  const { bankAccountId } = useParams<{ bankAccountId: string }>();\n\n  return (\n    <>\n      <h3>Bank account transactions</h3>\n      <p>{bankAccountId}</p>\n      <BankAccountTransactionsGrid bankAccountId={bankAccountId} />\n    </>\n  );\n};\n","import {\n  BalanceSheetReportRoute,\n  BALANCE_SHEET_REPORT_ROUTE,\n} from 'components/routes/BalanceSheetReportRoute';\nimport {\n  BankAccountsRoute,\n  BANK_ACCOUNTS_ROUTE,\n} from 'components/routes/BankAccountsRoute';\nimport {\n  BankAccountTransactionsRoute,\n  BANK_ACCOUNT_TRANSACTIONS_ROUTE,\n} from 'components/routes/BankAccountTransactionsRoute';\nimport {\n  IncomeStatementReportRoute,\n  INCOME_STATEMENT_REPORT_ROUTE,\n} from 'components/routes/IncomeStatementReportRoute';\nimport { ReportsRoute, REPORTS_ROUTE } from 'components/routes/ReportsRoute';\nimport { FC } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { AccountsRoute, ACCOUNTS_ROUTE } from '../routes/AccountsRoute';\nimport {\n  TransactionsRoute,\n  TRANSACTIONS_ROUTE,\n} from '../routes/TransactionsRoute';\n\nexport const AppContent: FC = () => {\n  return (\n    <Switch>\n      <Route exact path={ACCOUNTS_ROUTE} component={AccountsRoute} />\n      <Route exact path={BANK_ACCOUNTS_ROUTE} component={BankAccountsRoute} />\n      <Route\n        exact\n        path={BANK_ACCOUNT_TRANSACTIONS_ROUTE}\n        component={BankAccountTransactionsRoute}\n      />\n      <Route exact path={TRANSACTIONS_ROUTE} component={TransactionsRoute} />\n      <Route exact path={REPORTS_ROUTE} component={ReportsRoute} />\n      <Route\n        exact\n        path={BALANCE_SHEET_REPORT_ROUTE}\n        component={BalanceSheetReportRoute}\n      />\n      <Route\n        exact\n        path={INCOME_STATEMENT_REPORT_ROUTE}\n        component={IncomeStatementReportRoute}\n      />\n      <Redirect to={ACCOUNTS_ROUTE} />\n    </Switch>\n  );\n};\n","import { FC } from 'react';\n\nimport { Container } from '@material-ui/core';\nimport { useFlagState } from '@sprice237/proton-shared';\nimport { AppDrawer } from './appDrawer/AppDrawer';\nimport { useStyles } from './useStyles';\nimport { AppToolbar } from './AppToolbar';\nimport { AppContent } from './AppContent';\n\nexport const AppLayout: FC = () => {\n  const classes = useStyles();\n  const [isDrawerOpen, setDrawerOpen, setDrawerClosed] = useFlagState();\n\n  return (\n    <div className={classes.root}>\n      <AppToolbar isDrawerOpen={isDrawerOpen} onOpenDrawer={setDrawerOpen} />\n      <AppDrawer isOpen={isDrawerOpen} onClose={setDrawerClosed} />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <AppContent />\n        </Container>\n      </main>\n    </div>\n  );\n};\n","import React, { FC, useCallback, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { useLoginMutation, gqlMeQuery } from '@sprice237/proton-shared';\nimport { SubmitButton } from '../common/SubmitButton';\nimport { useFirebaseApp } from './useFirebaseApp';\n\nexport const LoginForm: FC<{ onSubmit: () => void }> = (props) => {\n  const { onSubmit } = props;\n  const firebaseApp = useFirebaseApp();\n  const [login] = useLoginMutation();\n\n  const [emailAddress, setEmailAddress] = useState('');\n  const [password, setPassword] = useState('');\n\n  const doLogin = useCallback(async () => {\n    await firebaseApp.auth().signInWithEmailAndPassword(emailAddress, password);\n    const firebaseJwt = await firebaseApp.auth().currentUser?.getIdToken();\n\n    if (!firebaseJwt) {\n      return;\n    }\n\n    await login({\n      variables: {\n        loginInput: {\n          firebaseJwt,\n        },\n      },\n      refetchQueries: [\n        {\n          query: gqlMeQuery,\n        },\n      ],\n    });\n\n    onSubmit();\n  }, [emailAddress, password]);\n\n  return (\n    <>\n      <div>\n        <TextField\n          label=\"Email address\"\n          value={emailAddress}\n          onChange={(e): void => setEmailAddress(e.target.value)}\n        />\n      </div>\n      <div>\n        <TextField\n          label=\"Password\"\n          inputProps={{ type: 'password' }}\n          value={password}\n          onChange={(e): void => setPassword(e.target.value)}\n        />\n      </div>\n      <div>\n        <SubmitButton onClick={doLogin} />\n      </div>\n    </>\n  );\n};\n","import firebase from 'firebase/app';\nimport { useFirebaseApp as useGenericFirebaseApp } from '@sprice237/proton-shared';\n\nexport const useFirebaseApp = (): firebase.app.App => {\n  return useGenericFirebaseApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  });\n};\n","import React, { FC, useCallback } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport { LoginForm } from '../auth/LoginForm';\n\nexport const LOGIN_ROUTE = '/login';\n\nexport const LoginRoute: FC = () => {\n  const history = useHistory();\n\n  const onSubmit = useCallback(() => {\n    history.push('/current-organization');\n  }, [history]);\n\n  return (\n    <Grid\n      container\n      spacing={0}\n      alignItems=\"center\"\n      justify=\"center\"\n      direction=\"column\"\n      style={{ height: '100vh' }}\n    >\n      <LoginForm onSubmit={onSubmit} />\n    </Grid>\n  );\n};\n","import { FC } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { useMeQuery } from '@sprice237/proton-shared';\n\nimport { AppLayout } from '../layout/AppLayout';\nimport { LoginRoute, LOGIN_ROUTE } from '../routes/LoginRoute';\nimport {\n  CurrentOrganizationSelectRoute,\n  CURRENT_ORGANIZATION_SELECT_ROUTE,\n} from '../routes/CurrentOrganizationSelectRoute';\n\nexport const AppRouter: FC = () => {\n  const { data: meData, loading } = useMeQuery();\n  const me = meData?.me;\n\n  return loading ? null : (\n    <Router>\n      <Switch>\n        {!me && <Route exact path={LOGIN_ROUTE} component={LoginRoute} />}\n        <Route\n          exact\n          path={CURRENT_ORGANIZATION_SELECT_ROUTE}\n          component={CurrentOrganizationSelectRoute}\n        />\n        {me && <AppLayout />}\n        <Redirect to={LOGIN_ROUTE} />\n      </Switch>\n    </Router>\n  );\n};\n","import { FC } from 'react';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { AppApolloProvider } from '../gql/AppApolloProvider';\nimport { AppRouter } from './AppRouter';\n\nconst Loading: FC = () => <p>Loading...</p>;\n\nexport const App: FC = () => {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <AppApolloProvider loadingComponent={Loading}>\n        <AppRouter />\n      </AppApolloProvider>\n    </MuiPickersUtilsProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}